class CGameMenu inherit CStateUIWnd
	
	static var ^CGameMenu ms_pxInstance;
	export constructor()
		if(!InitFromResource("UI/GameMenu","GameMenu")) then
			return;
		endif;		
		ms_pxInstance=this;
		var ^CDesktop	pxDesktop=CClientWrap.GetDesktop();
		
		SetPos(pxDesktop^.GetWidth()/2-GetWidth()/2,pxDesktop^.GetHeight()/2-GetHeight()/2);
		
		var ^CLevelInfo pxLevelInfo=^(CGameWrap.GetClient().GetLevelInfo());
		
		var ^CButton pxTmp=cast<CMenuButton>(GetControl("Back"));
		pxTmp^.m_xOnClick=OnBack;
		
		pxTmp=cast<CMenuButton>(GetControl("Options"));
		pxTmp^.m_xOnClick=OnOptions;
		
		pxTmp=cast<CMenuButton>(GetControl("SaveGame"));
		pxTmp^.m_xOnClick=OnSaveGame;
		var int iTmp=0;
		if(!CSettings.Get("Game/ButtonSaveMultiplayerEnable",iTmp))then
			CSettings.Set("Game/ButtonSaveMultiplayerEnable",iTmp);
		endif;
		if((pxLevelInfo!=null && pxLevelInfo^.GetNumHumanPlayers()!=1) && iTmp==0) then 
			pxTmp^.SetDisabled(true);
		endif;
		
		pxTmp=cast<CMenuButton>(GetControl("RestartMission"));
		pxTmp^.m_xOnClick=OnRetryGame;
		pxTmp^.SetVisible(pxLevelInfo^.GetNumHumanPlayers()==1&&CGameWrap.GetClient().HasValidPlayerSlot());
		
		pxTmp=cast<CMenuButton>(GetControl("LoadGame"));
		pxTmp^.m_xOnClick=OnLoadGame;
		//pxTmp^.SetDisabled(true);
		
		pxTmp=cast<CMenuButton>(GetControl("Abandon"));
		pxTmp^.m_xOnClick=OnAbandonGame;
		
		pxTmp=cast<CMenuButton>(GetControl("QuitWindows"));
		pxTmp^.m_xOnClick=OnQuitToWindows;
		
		SetCmd("Exit", OnBack );
		AddAccelerator("ESCAPE,NONE,Exit");		
		CGameWrap.Pause();
	endconstructor;
	
	export destructor()		
		ms_pxInstance=null;
		CGameWrap.Unpause();
	enddestructor;

	export proc bool Init()
		return(true);
	endproc;

	proc bool OnSaveGame()		
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_SAVEGAMEMENU);
		return(true);
	endproc;

	proc bool OnLoadGame()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_LOADGAMEMENU);
		return(true);
	endproc;
	
	proc bool OnRetryGame()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_RELOADGAME);
		CSoundMgrCln.SetGameIsRunning(false);
		return true;
	endproc;
	
	proc bool OnBack()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_INGAME);
		return true;
	endproc;

	proc bool OnOptions()
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_OPTIONSMENU);
		return true;
	endproc;
	
	proc bool OnAbandonGame()		
		CEvt_AbandonGame.Send();
		CUIStateMgr.Get().SetState(CUIStateMgr.STATE_INGAME);		
		return true;
	endproc;
	
	proc bool OnQuitToWindows()		
		//CGameWrap.Quit();
		AskForQuit();
		return true;
	endproc;
	
	proc bool AskForQuit()
		CMessageBox.MsgBox_YESNO(CLocalizer.Get().Translate("_UI_MainMenu_Title_QuitToWindows"),CLocalizer.Get().Translate("_UI_MainMenu_Label_QuitToWindows"),CMessageBox.SMB_ICONQUESTION,CUIStateMgr.Get().OnQuitMsgBox_CallBack);
		SetVisible(false);
		return true;
	endproc;	

endclass;

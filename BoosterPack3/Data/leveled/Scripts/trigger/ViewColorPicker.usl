class CViewColorPicker inherit CFrameWindow

    var ^CPane					m_pxColorPicker, m_pxPane_Color;
    var ^CSpinCtrlNumber			m_pxSpinR, m_pxSpinG, m_pxSpinB, m_pxSpinA;
    var ^CButton					m_pxBtnConfirm, m_pxBtnCancel, m_pxPreSet1, m_pxPreSet2, m_pxPreSet3, m_pxPreSet4, m_pxPreSet5, m_pxPreSet6, m_pxPreSet7, m_pxPreSet8;
    var ^CPane					m_pxRed, m_pxBlue, m_pxGreen, m_pxYellow, m_pxPurple, m_pxBlack, m_pxGrey, m_pxLightBlue;
    var color						m_xCol;
    export var procref<bool,color>		m_xReturnColor;
    var bool						m_bInSetColor;

   	export constructor()

   		if(!InitFromResource("Trigger/ViewColorPicker","ViewColorPicker")) then
			CLevelEditorWrap.LogError("UI.ViewColorPicker","InitFromResource failed");
			return;
		endif;

		m_pxPreSet1 = cast<CButton>(GetControl("ColorPane1/Pane1"));
		m_pxRed = new CPane;
		m_pxPreSet1^.m_xOnClick = OnColor1;
		m_pxPreSet1^.AddChild(m_pxRed);
		m_pxRed^.SetColor({{255,0,0,255}});
		m_pxRed^.SetPos(2,2);
		m_pxRed^.SetSize(31,19);

	      m_pxPreSet2 = cast<CButton>(GetControl("ColorPane1/Pane2"));
	      m_pxBlue = new CPane;
	      m_pxPreSet2^.m_xOnClick = OnColor2;
	      m_pxPreSet2^.AddChild(m_pxBlue);
		m_pxBlue^.SetColor({{0,0,255,255}});
		m_pxBlue^.SetSize(31,19);
		m_pxBlue^.SetPos(2,2);

		m_pxPreSet3 = cast<CButton>(GetControl("ColorPane1/Pane3"));
		m_pxGreen = new CPane;
		m_pxPreSet3^.m_xOnClick = OnColor3;
		m_pxPreSet3^.AddChild(m_pxGreen);
		m_pxGreen^.SetColor({{0,255,0,255}});
		m_pxGreen^.SetSize(31,19);
		m_pxGreen^.SetPos(2,2);

		m_pxPreSet4 = cast<CButton>(GetControl("ColorPane1/Pane4"));
		m_pxYellow = new CPane;
		m_pxPreSet4^.AddChild(m_pxYellow);
		m_pxPreSet4^.m_xOnClick = OnColor4;
		m_pxYellow^.SetColor({{255, 255, 0, 255}});
		m_pxYellow^.SetSize(31,19);
		m_pxYellow^.SetPos(2,2);

		m_pxPreSet5 = cast<CButton>(GetControl("ColorPane2/Pane5"));
		m_pxPurple = new CPane;
		m_pxPreSet5^.AddChild(m_pxPurple);
		m_pxPreSet5^.m_xOnClick = OnColor5;
		m_pxPurple^.SetColor({{125, 125, 255, 255}});
		m_pxPurple^.SetSize(31,19);
		m_pxPurple^.SetPos(2,2);

		m_pxPreSet6 = cast<CButton>(GetControl("ColorPane2/Pane6"));
		m_pxBlack = new CPane;
		m_pxPreSet6^.AddChild(m_pxBlack);
		m_pxPreSet6^.m_xOnClick = OnColor6;
		m_pxBlack^.SetColor({{0, 255, 255, 255}});
		m_pxBlack^.SetSize(31,19);
		m_pxBlack^.SetPos(2,2);

		m_pxPreSet7 = cast<CButton>(GetControl("ColorPane2/Pane7"));
		m_pxGrey = new CPane;
		m_pxPreSet7^.AddChild(m_pxGrey);
		m_pxPreSet7^.m_xOnClick = OnColor7;
		m_pxGrey^.SetColor({{50, 0, 50, 255}});
		m_pxGrey^.SetSize(31,19);
		m_pxGrey^.SetPos(2,2);

		m_pxPreSet8 = cast<CButton>(GetControl("ColorPane2/Pane8"));
		m_pxLightBlue = new CPane;
		m_pxPreSet8^.AddChild(m_pxLightBlue);
		m_pxPreSet8^.m_xOnClick = OnColor8;
		m_pxLightBlue^.SetColor({{255, 0, 255, 255}});
		m_pxLightBlue^.SetSize(31,19);
		m_pxLightBlue^.SetPos(2,2);


		m_pxColorPicker = cast<CPane>(GetControl("Pane4/Pane_Color"));
	      m_pxColorPicker^.SetVisible(true);

	      m_pxSpinR = cast<CSpinCtrlNumber>(GetControl("Pane4/Mixer_Ctrl/Spin_Red"));
	      m_pxSpinR^.m_xOnChange = OnColorChange;
	      m_pxSpinR^.SetLimits(0, 255, 10);
	      m_pxSpinG = cast<CSpinCtrlNumber>(GetControl("Pane4/Mixer_Ctrl/Spin_Green"));
	      m_pxSpinG^.m_xOnChange = OnColorChange;
	      m_pxSpinG^.SetLimits(0, 255, 10);
	      m_pxSpinB = cast<CSpinCtrlNumber>(GetControl("Pane4/Mixer_Ctrl/Spin_Blue"));
	      m_pxSpinB^.m_xOnChange = OnColorChange;
	      m_pxSpinB^.SetLimits(0, 255, 10);
	      m_pxSpinA = cast<CSpinCtrlNumber>(GetControl("Pane4/Mixer_Ctrl/Spin_Alpha"));
	      m_pxSpinA^.m_xOnChange = OnColorChange;
	       m_pxSpinA^.SetLimits(0, 255, 10);
	      m_pxSpinA^.SetValue(255);
	      m_pxSpinA^.SetVisible(false);

	      m_pxBtnConfirm = cast<CButton>(GetControl("Pane4/Options/Btn_Confirm"));
	      m_pxBtnConfirm^.SetText(CLocalizer.Get().Translate("_ViewColorPicker_Pane4/Options/Btn_Confirm"));
	      m_pxBtnConfirm^.m_xOnClick = ReturnColorToRegion;
	      m_pxBtnCancel = cast<CButton>(GetControl("Pane4/Options/Btn_Cancel"));
	      m_pxBtnCancel^.SetText(CLocalizer.Get().Translate("_ViewColorPicker_Pane4/Options/Btn_Cancel"));
	      m_pxBtnCancel^.m_xOnClick = OnClose;

		m_bInSetColor=false;
    endconstructor;

    export destructor()
    enddestructor;

    export proc void SetCurColor(int p_iR,int p_iG,int p_iB,int p_iA)
    	var color xCol;
		xCol.SetRed(p_iR);
		xCol.SetGreen(p_iG);
		xCol.SetBlue(p_iB);
		xCol.SetAlpha(p_iA);
    	SetCurColor(xCol);
    endproc;

    export proc void SetCurColor(color p_xColor)
    	if(m_bInSetColor)then return; endif;
    	m_bInSetColor=true;
    	m_xCol=p_xColor;
		m_pxColorPicker^.SetColor(m_xCol);
		m_pxSpinR^.SetValue(m_xCol.GetRed());
		m_pxSpinG^.SetValue(m_xCol.GetGreen());
		m_pxSpinB^.SetValue(m_xCol.GetBlue());
		m_pxSpinA^.SetValue(m_xCol.GetAlpha());
    	m_bInSetColor=false;
    endproc;

	export proc bool OnColorChange()
		SetCurColor(m_pxSpinR^.GetValueInt(),m_pxSpinG^.GetValueInt(),m_pxSpinB^.GetValueInt(),m_pxSpinA^.GetValueInt());
		return(true);
	endproc;

	export proc bool ReturnColorToRegion ()
		m_xReturnColor.Call (m_xCol);
		OnClose();
		return(true);
	endproc;

	export proc bool ReturnColor (color p_xColor)
		m_xReturnColor.Call (p_xColor);
		OnClose();
		return(true);
	endproc;

	export proc bool OnColor1()
		if(m_pxPreSet1^.OnClick()==true)then
			SetCurColor({{255,0,0,255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor2()
		if(m_pxPreSet2^.OnClick()==true) then
			SetCurColor({{0,0,255,255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor3()
		if(m_pxPreSet3^.OnClick()==true) then
			SetCurColor({{0,255,0,255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor4()
		if(m_pxPreSet4^.OnClick()==true) then
			SetCurColor({{255, 255, 0, 255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor5()
		if(m_pxPreSet5^.OnClick()==true)then
			SetCurColor({{125, 125, 255, 255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor6()
		if(m_pxPreSet6^.OnClick()==true)then
			SetCurColor({{0, 255, 255, 255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor7()
		if(m_pxPreSet7^.OnClick()==true)then
			SetCurColor({{50, 0, 50, 255}});
		endif;
		return (true);
	endproc;

	export proc bool OnColor8()
		if(m_pxPreSet8^.OnClick()==true)then
			SetCurColor({{255, 0, 255, 255}});
		endif;
		return (true);
	endproc;

	proc bool OnClose()
		delete this;
		return true;
	endproc;

endclass;
class CTabLights inherit CSeqTab

	var ^CSequenceEditor	m_pxSeqEditor;
	var ^CUSLTrackCtrl		m_pxTrackCtrl;
	var ^CSeqRuler 			m_pxRuler;
	var ^CItemPropView		m_pxItemPropView;
	var ^CSequenceControlPanelSmall	m_pxControlPanel;
	var ^CCheckBox			m_pxShowHelperCheckBox;

	export constructor(^CSequenceEditor p_pxSeqEditor)
		if(!InitFromResource("sequencer/SequenceEditor","Tab_Lights"))then
			CLevelEditorWrap.LogError("UI.SequenceEditor","Tab_Lights InitFromRessource() failed");
			return;
		endif;


		m_pxSeqEditor=p_pxSeqEditor;
		m_pxTrackCtrl=m_pxSeqEditor^.GetTrackCtrl();

		m_pxRuler=cast<CSeqRuler>(GetControl("Ruler"));
		m_pxTrackCtrl^.SetRuler(m_pxRuler);
		m_pxItemPropView=cast<CItemPropView>(GetControl("ItemPropView"));
		m_pxControlPanel=cast<CSequenceControlPanelSmall>(GetControl("ControlPanel"));

		var ^CTrackContainer pxTrackContainer=cast<CTrackContainer>(GetControl("TrackContainer"));
		m_pxTrackCtrl^.AddTrackContainer(pxTrackContainer);

		var ^IBaseTrack pxLightTrack1=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight1"));
		pxTrackContainer^.AddTrack(pxLightTrack1);
		var ^IBaseTrack pxLightTrack2=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight2"));
		pxTrackContainer^.AddTrack(pxLightTrack2);
		var ^IBaseTrack pxLightTrack3=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight3"));
		pxTrackContainer^.AddTrack(pxLightTrack3);
		var ^IBaseTrack pxLightTrack4=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight4"));
		pxTrackContainer^.AddTrack(pxLightTrack4);
		var ^IBaseTrack pxLightTrack5=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight5"));
		pxTrackContainer^.AddTrack(pxLightTrack5);
		var ^IBaseTrack pxLightTrack6=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight6"));
		pxTrackContainer^.AddTrack(pxLightTrack6);
		var ^IBaseTrack pxLightTrack7=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackLight7"));
		pxTrackContainer^.AddTrack(pxLightTrack7);
		
		m_pxShowHelperCheckBox=cast<CCheckBox>(GetControl("LightHelperCheckBox"));
		var int iState=0;
		var ^CObjMgr pxObjMgr = ^(CClientWrap.GetObjMgr());		
		if(pxObjMgr^.ShowLightHelpers())then
			iState=1;
		endif;
		m_pxShowHelperCheckBox^.SetChecked(iState);
		m_pxShowHelperCheckBox^.m_xOnStateChange=OnShowHelper;

	endconstructor;

	export destructor()
	enddestructor;

	export proc ^CSeqRuler GetRuler()
		return m_pxRuler;
	endproc;

	export proc ^CItemPropView GetItemPropView()
		return m_pxItemPropView;
	endproc;

	export proc void OnUpdateControlPanel()
		m_pxControlPanel^.Update(m_pxTrackCtrl,m_pxSeqEditor^.GetSequence());
	endproc;
	
	export proc void OnChangeSequence()
		if(m_pxItemPropView!=null)then
			m_pxItemPropView^.Init(null);
		endif;		
	endproc;
	
	proc bool OnShowHelper()
		var ^CObjMgr pxObjMgr = ^(CClientWrap.GetObjMgr());		
		var int iState=m_pxShowHelperCheckBox^.GetChecked();		
		if(iState==0)then			
			pxObjMgr^.ShowLightHelpersEnable(false);			
		else
			pxObjMgr^.ShowLightHelpersEnable(true);
		endif;
		return true;
	endproc;

endclass;
class CTabSounds inherit CSeqTab

	var ^CSequenceEditor	m_pxSeqEditor;
	var ^CUSLTrackCtrl		m_pxTrackCtrl;
	var ^CSeqRuler 			m_pxRuler;
	var ^CItemPropView		m_pxItemPropView;
	var ^CSequenceControlPanelSmall	m_pxControlPanel;
	var ^CCheckBox			m_pxShowHelperCheckBox;
	
	export constructor(^CSequenceEditor p_pxSeqEditor)
		if(!InitFromResource("sequencer/SequenceEditor","Tab_Sounds"))then
			CLevelEditorWrap.LogError("UI.SequenceEditor","Tab_Sounds InitFromRessource() failed");
			return;
		endif;


		m_pxSeqEditor=p_pxSeqEditor;
		m_pxTrackCtrl=m_pxSeqEditor^.GetTrackCtrl();

		m_pxRuler=cast<CSeqRuler>(GetControl("Ruler"));
		m_pxTrackCtrl^.SetRuler(m_pxRuler);
		m_pxItemPropView=cast<CItemPropView>(GetControl("ItemPropView"));
		m_pxControlPanel=cast<CSequenceControlPanelSmall>(GetControl("ControlPanel"));
		
		
		var ^CTrackContainer pxTrackContainer=cast<CTrackContainer>(GetControl("TrackContainer"));
		m_pxTrackCtrl^.AddTrackContainer(pxTrackContainer);

		var ^IBaseTrack pxTrack1=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound1"));
		pxTrackContainer^.AddTrack(pxTrack1);
		var ^IBaseTrack pxTrack2=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound2"));
		pxTrackContainer^.AddTrack(pxTrack2);
		var ^IBaseTrack pxTrack3=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound3"));
		pxTrackContainer^.AddTrack(pxTrack3);
		var ^IBaseTrack pxTrack4=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound4"));
		pxTrackContainer^.AddTrack(pxTrack4);
		var ^IBaseTrack pxTrack5=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound5"));
		pxTrackContainer^.AddTrack(pxTrack5);
		var ^IBaseTrack pxTrack6=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound6"));
		pxTrackContainer^.AddTrack(pxTrack6);
		var ^IBaseTrack pxTrack7=cast<IBaseTrack>(pxTrackContainer^.GetControl("TrackSound7"));
		pxTrackContainer^.AddTrack(pxTrack7);		
		
		m_pxShowHelperCheckBox=cast<CCheckBox>(GetControl("SoundHelperCheckBox"));
		var int iState=0;
		var ^CObjMgr pxObjMgr = ^(CClientWrap.GetObjMgr());		
		if(pxObjMgr^.ShowSoundHelpers())then
			iState=1;
		endif;
		m_pxShowHelperCheckBox^.SetChecked(iState);
		m_pxShowHelperCheckBox^.m_xOnStateChange=OnShowHelper;
	endconstructor;

	export destructor()
	enddestructor;

	export proc ^CSeqRuler GetRuler()
		return m_pxRuler;
	endproc;

	export proc ^CItemPropView GetItemPropView()
		return m_pxItemPropView;
	endproc;

	export proc void OnUpdateControlPanel()
		m_pxControlPanel^.Update(m_pxTrackCtrl,m_pxSeqEditor^.GetSequence());
	endproc;
	
	export proc void OnChangeSequence()
		if(m_pxItemPropView!=null)then
			m_pxItemPropView^.Init(null);
		endif;		
	endproc;
	
	proc bool OnShowHelper()
		var ^CObjMgr pxObjMgr = ^(CClientWrap.GetObjMgr());		
		var int iState=m_pxShowHelperCheckBox^.GetChecked();		
		if(iState==0)then			
			pxObjMgr^.ShowSoundHelpersEnable(false);			
		else
			pxObjMgr^.ShowSoundHelpersEnable(true);
		endif;
		return true;
	endproc;

endclass;
class CViewLevelProp inherit CEnhancedFrameWindow;
	export constructor()

		if(!InitFromResource("options/ViewLevelProp","LevelProps")) then
			CLevelEditorWrap.LogError("UI.ViewLevelProp","InitFromResource failed");
			return;
		endif;

		LoadPosition("LevelProp");

		var ^CStaticCtrl pxSTLevelOps=cast<CStaticCtrl>(GetControl("CStaticCtrl_Blank"));
		pxSTLevelOps^.SetText(CLocalizer.Get().Translate("_ViewLevelProp_CStaticCtrl_Blank"));
		var ^CButton pxChange	=	cast<CButton>(GetControl("Btn_Change"));
		pxChange^.SetText(CLocalizer.Get().Translate("_ViewLevelProp_Btn_Change"));
		pxChange^.m_xOnClick	=	OnChange;
		var ^CButton pxApply	=	cast<CButton>(GetControl("Btn_Apply"));
		pxApply^.SetText(CLocalizer.Get().Translate("_ViewLevelProp_Btn_Apply"));
		pxApply^.m_xOnClick	=	OnApply;
		var ^CButton pxCancel	=	cast<CButton>(GetControl("Btn_Cancel"));
		pxCancel^.SetText(CLocalizer.Get().Translate("_ViewLevelProp_Btn_Cancel"));
		pxCancel^.m_xOnClick	=	OnCancel;
		var ^CDropList pxDList 	= 	cast<CDropList>(GetControl("DList_Setting"));
		pxDList^.AddItem("Northland");
		pxDList^.AddItem("Savanna");
		pxDList^.AddItem("Jungle");
		pxDList^.AddItem("Icewaste");
		pxDList^.AddItem("Ashvalley");
		pxDList^.AddItem("Test");
		pxDList^.AddItem("Cave1");
		pxDList^.AddItem("Cave2");
		pxDList^.AddItem("Cave3");
	endconstructor;

	proc bool OnApply()
		var int idx;
		var array string asUsedGfx;
		var ^CGfxMgr pxGfxMgr=^(CLevelEditorWrap.GetGfxMgr());
		var ^CDropList pxDList = cast<CDropList>(GetControl("DList_Setting"));

		var string sSetting=pxDList^.GetSelectedItemAsString();
		if(sSetting=="Northland")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(00b);
			//Fix
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Savanna")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(01b);
			//Fix
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Jungle")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(010b);
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Icewaste")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(011b);
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Ashvalley")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(0100b);
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(pxDList^.GetSelectedItemAsString()=="Test")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(0101b);
			//pxMat^.SetSetting(sSetting);
		// Holy City 	
		elseif(sSetting=="Cave1")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(0110b);
			//Fix
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Cave2")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(0111b);
			//Fix
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		elseif(sSetting=="Cave3")then
			CLevelEditorWrap.GetScapeMgr().SetTerrainSetting(01000b);
			//Fix
			//pxMat^.SetSetting(sSetting);
			CEnhancedMenu.Get().GetLevel().SetSetting(sSetting);
			CLevelEditorWrap.GetForestMgr().LoadForestConfig(CLevelEditorWrap.GetUrsRelPath()+"/Data/Base/Scripts/Server/Classes/Vegetation/Forest_"+sSetting+".txt");
		endif;
		ShowLevel();
		return(true);
	endproc;

	export proc bool ShowLevel()
		var ^CEdit pxCurrent =	cast<CEdit>(GetControl("CEdit_CurLevel"));
		pxCurrent^.SetText(CEnhancedMenu.Get().GetLevelName());
		return true;
	endproc;

	proc bool OnCancel()
		OnClose();
		return(true);
	endproc;

	export proc bool OnChange()
		var ^CButton pxChange	=	cast<CButton>(GetControl("Btn_Change"));
		var ^CEdit pxCurrent 	=	cast<CEdit>(GetControl("CEdit_CurLevel"));
		CEnhancedMenu.Get().OnSaveAsLevel();
		return (true);
	endproc;

endclass;
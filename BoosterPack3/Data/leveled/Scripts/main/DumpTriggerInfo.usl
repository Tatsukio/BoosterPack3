class CDumpTriggerInfo inherit CEnhancedFrameWindow
	var ^CEdit m_pxResults;

	export constructor()
		if(!InitFromResource("main/DumpTriggerInfo","DumpTriggerInfo"))then
			CLevelEditorWrap.LogError("UI.DumpTriggerInfo","DumpTriggerInfo InitFromRessource() failed");
			return;
		endif;
		var ^CButton pxBtnBugRefresh=cast<CButton>(GetControl("ButtonBugRefresh"));
		if (pxBtnBugRefresh!=null) then pxBtnBugRefresh^.m_xOnClick=OnClickBugRefresh; endif;
		var ^CButton pxBtnRefresh=cast<CButton>(GetControl("ButtonRefresh"));
		pxBtnRefresh^.m_xOnClick=OnClickRefresh;
		SetDefButtonOk(pxBtnRefresh);
		SetSizable(true);
		m_pxResults=cast<CEdit>(GetControl("TriggerDumpInfo"));
		if(m_pxResults==null)then KLog.LogError("DumpTriggerInfo","TriggerDumpInfo"); endif;
		m_pxResults^.SetMultiLine(true);
		m_pxResults^.SetReadOnly(true);
		m_pxResults^.SetTextLimit(1000000000);
		//OnClickRefresh();
		LoadPosition("DumpTriggerInfo");
	endconstructor;	
	
	export destructor()
	enddestructor;
	
	export proc bool OnClickBugRefresh()
		var ^CTriggerDescMgr pxTDM=^(CLevelEditorWrap.GetTriggerDescMgr());
		if (pxTDM==null)then return false; endif;
		m_pxResults^.SetText(pxTDM^.GenerateTriggerBugInfo());
		return true;
	endproc;

	export proc bool OnClickRefresh()
		var ^CTriggerDescMgr pxTDM=^(CLevelEditorWrap.GetTriggerDescMgr());
		if (pxTDM==null)then return false; endif;
		m_pxResults^.SetText(pxTDM^.GenerateTriggerInfo());
		return true;
	endproc;
	
endclass;
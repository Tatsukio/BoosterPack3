class CBrush;

	var int m_iFalloff, m_iSizeX, m_iSizeY, m_iFormTemp, m_iFalloffTypeTemp;
	var bitset m_dwFalloffType, m_dwForm;
	var real m_fHeight;
	var string m_sName;
	
	// the path in the PropDB where the CHeightBrush'es are kept
	export static var string ms_sCfgPath;

//		int p_iFalloff, int p_iSize, bitset p_dwForm, real p_fHeight, bitset p_dwFalloffType);
		
	export constructor( string p_sName )
		m_sName=p_sName;
		m_iFalloff = 1;
		m_dwFalloffType = 0b;
		m_dwForm = 0b;
		m_fHeight = 0.1;
		m_iSizeX = 10;
		m_iSizeY = 10;
		
	endconstructor;
		
	export constructor( string p_sName, int p_iFalloff, bitset p_dwFalloffType, bitset p_dwForm, real p_fHeight, int p_iSizeX, int p_iSizeY )
		m_sName=p_sName;
		m_iFalloff = p_iFalloff;
		m_dwFalloffType = p_dwFalloffType;
		m_dwForm = p_dwForm;
		m_fHeight = p_fHeight;
		m_iSizeX = p_iSizeX;
		m_iSizeY = p_iSizeY;
	endconstructor;

	export constructor()
		m_sName="";
		m_iFalloff = 1;
		m_dwFalloffType = 0b;
		m_dwForm = 0b;
		m_fHeight = 0.1;
		m_iSizeX = 10;
		m_iSizeY = 10;
		
	endconstructor;

	export proc bool SetFalloff(int p_iFalloff)
		m_iFalloff = p_iFalloff;
		return(true);
	endproc;

	export proc bool SetFalloffType(bitset p_dwFalloffType)
		m_dwFalloffType = p_dwFalloffType;
		return(true);
	endproc;

	export proc bool SetForm(bitset p_dwForm)
		m_dwForm=p_dwForm;
		return(true);
	endproc;

	export proc bool SetHeight(real p_fHeight)
		m_fHeight=p_fHeight;
		return(true);
	endproc;

	export proc bool SetSizeX(int p_iSizeX)
		m_iSizeX = p_iSizeX;
		return(true);
	endproc;

	export proc bool SetSizeY(int p_iSizeY)
		m_iSizeY = p_iSizeY;
		return(true);
	endproc;
		
	// reads brush properties from the config DB using the given p_sKeyName	
	export proc bool ReadFromCfg(string p_sKeyName);
		var bool bRet = true;
		var string sPath = ms_sCfgPath+"/";
		bRet =
			CSettings.Get(sPath+p_sKeyName+"/Name", m_sName) &&
			CSettings.Get(sPath+p_sKeyName+"/Falloff", m_iFalloff) &&
			CSettings.Get(sPath+p_sKeyName+"/SizeX", m_iSizeX) &&
			CSettings.Get(sPath+p_sKeyName+"/SizeY", m_iSizeY) &&
			CSettings.Get(sPath+p_sKeyName+"/Form", m_iFormTemp) &&
			CSettings.Get(sPath+p_sKeyName+"/Height", m_fHeight) &&
			CSettings.Get(sPath+p_sKeyName+"/FalloffType", m_iFalloffTypeTemp);
			// temporary workaround bitsetload as integer
			//m_dwForm = m_iFormTemp.ToBitset();
			if(m_iFormTemp == 1) then
				m_dwForm = 01b;
			else
				m_dwForm = 0b;
			endif;
			if(m_iFalloffTypeTemp == 2) then
				m_dwFalloffType = 010b;
			elseif(m_iFalloffTypeTemp == 1) then
				m_dwFalloffType = 01b;
			else
				m_dwFalloffType = 0b;
			endif;
			//CLevelEditorWrap.LogError(m_sName,m_iFalloffTypeTemp.ToString()+"   "+m_dwFalloffType.ToString());
		return bRet;
	endproc;
	
// writes brush properties to the config DB using the given p_sKeyName	
	export proc void WriteToCfg(string p_sKeyName);
		// bitset.ToInt() doesn't work
		if(m_dwForm == 01b) then
			m_iFormTemp = 1;
		else
			m_iFormTemp = 0;
		endif;
		if(m_dwFalloffType == 010b) then
			m_iFalloffTypeTemp = 2;
		elseif(m_dwFalloffType == 01b) then
			m_iFalloffTypeTemp = 1;
		else
			m_iFalloffTypeTemp = 0;
		endif;
		
		var bool bRet = true;
		var string sPath = ms_sCfgPath+"/";
		CSettings.Set(sPath+p_sKeyName+"/Name", m_sName);
		CSettings.Set(sPath+p_sKeyName+"/Falloff", m_iFalloff);
		CSettings.Set(sPath+p_sKeyName+"/SizeX", m_iSizeX);
		CSettings.Set(sPath+p_sKeyName+"/SizeY", m_iSizeY);
		CSettings.Set(sPath+p_sKeyName+"/Form", m_iFormTemp);
		CSettings.Set(sPath+p_sKeyName+"/Height", m_fHeight);
		CSettings.Set(sPath+p_sKeyName+"/FalloffType", m_iFalloffTypeTemp);
	endproc;
	

	
	export proc string GetName()
		return(m_sName);
	endproc;
	
	export proc bool SetName(string p_sName)
		m_sName=p_sName;
		return(true);
	endproc;

	export proc real GetHeight()
		return(m_fHeight);
	endproc;

	export proc int GetFalloff()
		return(m_iFalloff);
	endproc;

	export proc bitset GetFalloffType()
		return(m_dwFalloffType);
	endproc;
	
	export proc int GetSizeX()
		return(m_iSizeX);
	endproc;

	export proc int GetSizeY()
		return(m_iSizeY);
	endproc;

	export proc bitset GetForm()
		return(m_dwForm);
	endproc;

	export proc ref CBrush op_Assign( ref CBrush p_rxBrush )
		m_sName = p_rxBrush.GetName();
		m_fHeight = p_rxBrush.GetHeight();
		m_iFalloff = p_rxBrush.GetFalloff();
		m_dwFalloffType = p_rxBrush.GetFalloffType();
		m_iSizeX = p_rxBrush.GetSizeX();
		m_iSizeY = p_rxBrush.GetSizeY();
		m_dwForm = p_rxBrush.GetForm();
		return(this^);
	endproc;

endclass;

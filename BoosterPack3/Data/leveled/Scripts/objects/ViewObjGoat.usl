class CViewObjGoat inherit CEnhancedFrameWindow
    export var ^CViewObjGoatGraphicSet  m_pxVOGGraS;
    export var ^CViewObjGoatGraphicObj  m_pxVOGGraO;
    export var ^CViewObjGoatGameObj     m_pxVOGGamO;
    var ^CDesktop                       m_pxDesktop;

	export constructor()
		if(!InitFromResource("objects/ViewObjGoat","ObjGoat")) then
		    CLevelEditorWrap.LogError("UI.ViewObjGoat","InitFromResource - ObjGoat failed");
			return;
		endif;

		var ^CGraphicObjectMgr pxGOMgr = CGraphicObjectMgr.Get();
		pxGOMgr^.m_pxGoat = this;

        // buttons
    	var ^CToggleButton pxGraphicSetBut = cast<CToggleButton>(GetControl("CGraphicSetButton"));
    	pxGraphicSetBut^.SetText(CLocalizer.Get().Translate("_ViewObjGoat_CGraphicSetButton"));
    	pxGraphicSetBut^.m_xOnClick = OnPageGraphicSets;
    	pxGraphicSetBut^.SetGrouped(true);

    	var ^CToggleButton pxGraphicObjBut = cast<CToggleButton>(GetControl("CGraphicObjButton"));
    	pxGraphicObjBut^.SetText(CLocalizer.Get().Translate("_ViewObjGoat_CGraphicObjButton"));
    	pxGraphicObjBut^.m_xOnClick = OnPageGraphicObjs;
    	pxGraphicObjBut^.SetGrouped(true);

    	var ^CToggleButton pxGameObjBut = cast<CToggleButton>(GetControl("CGameObjButton"));
    	pxGameObjBut^.SetText(CLocalizer.Get().Translate("_ViewObjGoat_CGameObjButtonn"));
    	pxGameObjBut^.m_xOnClick = OnPageGameObjs;
    	pxGameObjBut^.SetGrouped(true);

    	m_pxDesktop = CClientWrap.GetDesktop();

    	m_pxVOGGraS = new CViewObjGoatGraphicSet();
    	m_pxDesktop^.AddChild(m_pxVOGGraS);
    	CWindowMgr.Get().BringWindowToTop(m_pxVOGGraS,true);
    	m_pxVOGGraS^.SetVisible(false);

    	m_pxVOGGraO = new CViewObjGoatGraphicObj();
    	m_pxDesktop^.AddChild(m_pxVOGGraO);
    	CWindowMgr.Get().BringWindowToTop(m_pxVOGGraO,true);
    	m_pxVOGGraO^.SetVisible(false);

    	m_pxVOGGamO = new CViewObjGoatGameObj();
    	m_pxDesktop^.AddChild(m_pxVOGGamO);
    	CWindowMgr.Get().BringWindowToTop(m_pxVOGGamO,true);
    	m_pxVOGGamO^.SetVisible(false);

    	LoadPosition("ObjGoat");
	endconstructor;
	
	export destructor()
		delete m_pxVOGGraS;
		delete m_pxVOGGraO;
		delete m_pxVOGGamO;		
	enddestructor;

	proc bool OnPageGraphicSets()
		m_pxVOGGraS^.SetVisible(true);
		m_pxVOGGraO^.SetVisible(false);
		m_pxVOGGamO^.SetVisible(false);

		m_pxVOGGraS^.m_pxParent = this;
		m_pxVOGGraO^.m_pxParent = this;

		return(true);
	endproc;

	proc bool OnPageGraphicObjs()
		m_pxVOGGraO^.SetVisible(true);
		m_pxVOGGraS^.SetVisible(false);
		m_pxVOGGamO^.SetVisible(false);

		m_pxVOGGraS^.m_pxParent = this;
		m_pxVOGGraO^.m_pxParent = this;
		return(true);
	endproc;

	proc bool OnPageGraphicObjsClose()
		CLevelEditorWrap.LogSpam("UI.ViewObjGoat","wir closen jetzt!");
		return(true);
	endproc;

	proc bool OnPageGameObjs()
		m_pxVOGGamO^.SetVisible(true);
		m_pxVOGGraS^.SetVisible(false);
		m_pxVOGGraO^.SetVisible(false);

		m_pxVOGGraS^.m_pxParent = this;
		m_pxVOGGraO^.m_pxParent = this;
		return(true);
	endproc;
endclass;

// =======================================================================
// helper classes for managing graphic objects
// =======================================================================
// class for all tmp objects
class CGraphicObject
    export var string       m_sObjectName;
    export var string       m_sGraphicFileValue;
    export var array string m_asAnimFilesName;
    export var array string m_asAnimFilesValue;

    export proc int NumAnims()
        return m_asAnimFilesName.NumEntries();
    endproc;
endclass;

// mgr class for handling objects (ctrls object list entries)
class CGraphicObjectMgr
    var array CGraphicObject        m_axAllObjects;
    static var ^CGraphicObjectMgr   ms_pxGraphicObjectMgr;

    export var ^CViewObjGoat m_pxGoat;

    constructor()
        m_axAllObjects = 0;
    endconstructor;

    destructor()
        m_axAllObjects = 0;
    enddestructor;

    export static proc ^CGraphicObjectMgr Get()
        if (ms_pxGraphicObjectMgr == null) then
            ms_pxGraphicObjectMgr = new CGraphicObjectMgr();
        endif;
        return ms_pxGraphicObjectMgr;
    endproc;
    
    export static proc void ShutStatic()
    	delete ms_pxGraphicObjectMgr;
	endproc;

    // ===================================================================
    // add an item
    // ===================================================================
    // public method
    export proc void AddItem(CGraphicObject p_xGraphicObj)
        AddItem(p_xGraphicObj.m_sObjectName, p_xGraphicObj.m_sGraphicFileValue, p_xGraphicObj.m_asAnimFilesValue);
        m_pxGoat^.m_pxVOGGraS^.m_pxGraphicObjList^.AddItem(p_xGraphicObj.m_sObjectName);            // add object string to object list
    endproc;

    // private method
    proc void AddItem(string p_sObjName, string p_sGraphicFileValue, array string p_asAnimFilesValue)
        var CGraphicObject xGraphicObject;
        xGraphicObject.m_sObjectName        = p_sObjName;
        xGraphicObject.m_sGraphicFileValue  = p_sGraphicFileValue;
        xGraphicObject.m_asAnimFilesValue   = p_asAnimFilesValue.NumEntries();
        xGraphicObject.m_asAnimFilesName    = p_asAnimFilesValue.NumEntries();

        CLevelEditorWrap.LogSpam("UI.ViewObjGoat","GraphicObjekt : " +(xGraphicObject.m_sObjectName));
        var int i;
        for (i=0) cond (i<p_asAnimFilesValue.NumEntries()) iter (i++) do
            var string sTmp = p_asAnimFilesValue[i];
            var int iIdx = sTmp.Find('_');
            if (iIdx != -1) then
                sTmp = sTmp.Mid(iIdx+1);
                iIdx = sTmp.FindRev('.');
                if (iIdx != -1) then
                    sTmp = sTmp.Left(iIdx);
                    xGraphicObject.m_asAnimFilesName[i] = sTmp;
                    xGraphicObject.m_asAnimFilesValue[i] = p_asAnimFilesValue[i];
                    CLevelEditorWrap.LogSpam("UI.ViewObjGoat",sTmp +" = " +(xGraphicObject.m_asAnimFilesValue[i]));
                endif;
            endif;
        endfor;

        m_axAllObjects.AddEntry(xGraphicObject);
    endproc;

    // ===================================================================
    // delete an item
    // ===================================================================
    export proc void DeleteItem(string p_sObjName)
        var string sTmp = m_pxGoat^.m_pxVOGGraS^.m_pxGraphicObjList^.GetSelectedItemAsString();

        var int i;
        for (i=0) cond (i<m_axAllObjects.NumEntries()) iter (i++) do
            if (m_axAllObjects[i].m_sObjectName == sTmp) then
                m_axAllObjects.DeleteEntry(i);
                break;
            endif;
        endfor;

        m_pxGoat^.m_pxVOGGraS^.m_pxGraphicObjList^.Clear();
        for (i=0) cond (i<m_axAllObjects.NumEntries()) iter (i++) do
            m_pxGoat^.m_pxVOGGraS^.m_pxGraphicObjList^.AddItem(m_axAllObjects[i].m_sObjectName);
        endfor;
    endproc;

    // ===================================================================
    // object count
    // ===================================================================
    export proc int NumEntries()
        return m_axAllObjects.NumEntries();
    endproc;

    // ===================================================================
    // get an object
    // ===================================================================
    export proc CGraphicObject GetObject(int p_iIndex)
        return m_axAllObjects[p_iIndex];
    endproc;

    // ===================================================================
    // find an object - returns index of array
    // ===================================================================
    export proc int FindObject(string p_sObjName)
        var int i;
        for (i=0) cond (i<m_axAllObjects.NumEntries()) iter (i++) do
            if (m_axAllObjects[i].m_sObjectName == p_sObjName) then
                return i;
            endif;
        endfor;
        return -1;
    endproc;

    // ===================================================================
    // clear all
    // ===================================================================
    export proc void Clear()
        var int i;
        for (i=0) cond (i<m_axAllObjects.NumEntries()) iter (i++) do
            m_axAllObjects[i].m_sObjectName == "";
            m_axAllObjects[i].m_sGraphicFileValue == "";
            m_axAllObjects[i].m_asAnimFilesName = 0;
            m_axAllObjects[i].m_asAnimFilesValue = 0;
        endfor;
    endproc;
endclass;